/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TurnOff.java
 *
 * Created on 2012-6-21, 16:22:12
 */
package com.view;

import com.operate.ExpenseLogOperate;
import com.util.DateThread;
import com.util.InitSelectItem;
import com.util.JFrameUtil;
import com.util.SeriableUtil;
import com.vo.Card;
import com.vo.Computer;
import com.vo.ExpenseLog;
import java.io.File;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *本类是下机处理类
 * @author LiuZeming
 */
public class TurnOffJFrame extends javax.swing.JFrame {

    /** Creates new form TurnOff */
    public TurnOffJFrame() {
        initComponents();
        setTitle("下机界面");
        InitSelectItem.initComputerNo(OffComputerTextField, false);//初始化电脑编号下拉框
        //初始化时间
        initTimeNow();
    }

    /**
     * 初始化系统时间并显示
     */
    private void initTimeNow() {
        DateThread dataThread = new DateThread(offTimeLabel);
       // dataThread.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        OffComputerTextField = new javax.swing.JComboBox();
        offTimeLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setName("Form"); // NOI18N

        jLabel2.setFont(new java.awt.Font("微软雅黑", 0, 24));
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.view.NetBarMain.class).getContext().getResourceMap(TurnOffJFrame.class);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        OffComputerTextField.setFont(resourceMap.getFont("OffComputerTextField.font")); // NOI18N
        OffComputerTextField.setName("OffComputerTextField"); // NOI18N

        offTimeLabel.setFont(resourceMap.getFont("offTimeLabel.font")); // NOI18N
        offTimeLabel.setText(resourceMap.getString("offTimeLabel.text")); // NOI18N
        offTimeLabel.setName("offTimeLabel"); // NOI18N

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        jMenuItem3.setText(resourceMap.getString("jMenuItem3.text")); // NOI18N
        jMenuItem3.setName("jMenuItem3"); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OffComputerTextField, 0, 198, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(offTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))))
                .addContainerGap(67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OffComputerTextField)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(offTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  
    /**
     * 下机处理
     * 对消费记录进行计费然后序列化到文件
     * 卡的状态设置为可用
     * 电脑的状态也设置为可用
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cardPath = "dataFolder\\CardMap.obj";
        String computerPath = "dataFolder\\ComputerMap.obj";
        //判断下拉框是否有数值
        if (OffComputerTextField.getSelectedItem() != null) {
            Map cardMap = SeriableUtil.deserializeFile2Obj(new File(cardPath));
            Map computerMap = SeriableUtil.deserializeFile2Obj(new File(computerPath));
            //   
            String Comkey = (String) OffComputerTextField.getSelectedItem();
            Computer computer = (Computer) computerMap.get(Comkey);
            ExpenseLog expense = findLogByComNo(Comkey);
            if (expense != null) {
                System.out.println(expense.toString());
                String cardNo = expense.getCardNo();
                double money = count(expense.getStartTime());
                //对修改后电脑进行序列化
                computer.setState(true);
                computerMap.put(Comkey, computer);
                SeriableUtil.seriableObj2File(computerMap, new File(computerPath));
                //对修改后的卡进行序列化
                Card card = (Card) cardMap.get(cardNo);
                card.setState(true);
                double leftMoney = card.getMoney() - money;
                card.setMoney(leftMoney);
                SeriableUtil.seriableObj2File(cardMap, new File(cardPath));
                //对消费记录进行操作
                expense.setEndTime(new Date());
                expense.setMoney(money);
                //掉用添加记录的方法
                ExpenseLogOperate.addLog(expense);
                JOptionPane.showMessageDialog(rootPane, card.getId() + "结账成功！账号余额为:" + leftMoney + "元 ", "下机成功", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //通过电脑编号查找到消费记录
    public ExpenseLog findLogByComNo(String ComNo) {
        String expensePath = "dataFolder\\ExpenseLog.obj";
        Map expenseMap = SeriableUtil.deserializeFile2Obj(new File(expensePath));
        Iterator itor = expenseMap.values().iterator();
        while (itor.hasNext()) {
            ExpenseLog temp = (ExpenseLog) itor.next();
            if (temp.getComputerNo().equals(ComNo) && temp.getEndTime() == null) {
                return temp;
            }
        }
        //如果查找不到数据则返回null
        return null;
    }

    /**
     * 上机按钮
     * @param evt 
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        TurnOnJFrame frame = new TurnOnJFrame();
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * 退出按钮
     * @param evt 
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * 关于按钮
     * @param evt 
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        AboutBox box= new AboutBox();
        JFrameUtil.centerShowJFrame(box);
         box.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    /**
     * 计算所用的上网时间 
     * 1小时上网费用为2元，小于1小时5分而且大于5秒的算1小时，
     * 超过5分钟的算1小时
     * @param date 上机时间
     * @return 返回消费金额
     */
    private double count(Date date) {
        double money;
        long time = (new Date().getTime() - date.getTime()) / 1000;//上网所用的秒数
        long minute = time / 60;//上网用的分钟数
        if (time >= 5 && minute <= 5) {
            money = 2;
        } else {
            long hour = minute / 60;
            long minute2 = minute % 60;
            money = hour * 2;
            if (minute2 > 5) {
                money = money + 2;
            }
        }
        System.out.println("消费金额>>>>>" + money);
        return money;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TurnOffJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox OffComputerTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JLabel offTimeLabel;
    // End of variables declaration//GEN-END:variables
}
